{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"multiple regression using train test","provenance":[],"authorship_tag":"ABX9TyMcwdZzUIcvKDMdXiZINQx8"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":31,"metadata":{"id":"anJmWHqLq3Jq","executionInfo":{"status":"ok","timestamp":1650356642303,"user_tz":-345,"elapsed":625,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd"]},{"cell_type":"code","source":["x=data.drop('maxTemp',axis=1)\n","y=data['maxTemp']\n"],"metadata":{"id":"kHPuqoqwrIfv","executionInfo":{"status":"ok","timestamp":1650356642311,"user_tz":-345,"elapsed":69,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["# importing train_test_split from sklearn\n","from sklearn.model_selection import train_test_split\n","# splitting the data\n","x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.2, random_state = 42)"],"metadata":{"id":"asbDnx8ur6Gp","executionInfo":{"status":"ok","timestamp":1650356642313,"user_tz":-345,"elapsed":68,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["# importing module\n","from sklearn.linear_model import LinearRegression\n","# creating an object of LinearRegression class\n","LR = LinearRegression()\n","# fitting the training data\n","LR.fit(x_train,y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7EqtC-Ods8RO","executionInfo":{"status":"ok","timestamp":1650356642314,"user_tz":-345,"elapsed":65,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}},"outputId":"f582a7a9-a5a8-4f56-ba00-de612abaa25c"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","source":["x_test"],"metadata":{"id":"Ro2qusykwcWw","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1650356642315,"user_tz":-345,"elapsed":58,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}},"outputId":"ce81fd85-2e47-41d6-9117-ac129cb38381"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0  humidityAt3  humidityAt12  precipitation\n","175          175        91.60         92.50           27.0\n","478          478        82.90         95.30            0.0\n","2533        2533        86.30         94.00            0.0\n","1765        1765        64.40         74.40            0.0\n","3364        3364        80.90         96.10            0.0\n","...          ...          ...           ...            ...\n","1962        1962        75.60         71.00            0.0\n","3885        3885        85.55         79.13            1.7\n","2251        2251        74.70         71.10            0.0\n","1705        1705        82.30         88.30           42.6\n","1491        1491        97.40         80.40            0.0\n","\n","[876 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-cc0a9a16-e007-4b6c-88ec-9e46da8fa1a7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>humidityAt3</th>\n","      <th>humidityAt12</th>\n","      <th>precipitation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>175</th>\n","      <td>175</td>\n","      <td>91.60</td>\n","      <td>92.50</td>\n","      <td>27.0</td>\n","    </tr>\n","    <tr>\n","      <th>478</th>\n","      <td>478</td>\n","      <td>82.90</td>\n","      <td>95.30</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2533</th>\n","      <td>2533</td>\n","      <td>86.30</td>\n","      <td>94.00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1765</th>\n","      <td>1765</td>\n","      <td>64.40</td>\n","      <td>74.40</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3364</th>\n","      <td>3364</td>\n","      <td>80.90</td>\n","      <td>96.10</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1962</th>\n","      <td>1962</td>\n","      <td>75.60</td>\n","      <td>71.00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3885</th>\n","      <td>3885</td>\n","      <td>85.55</td>\n","      <td>79.13</td>\n","      <td>1.7</td>\n","    </tr>\n","    <tr>\n","      <th>2251</th>\n","      <td>2251</td>\n","      <td>74.70</td>\n","      <td>71.10</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1705</th>\n","      <td>1705</td>\n","      <td>82.30</td>\n","      <td>88.30</td>\n","      <td>42.6</td>\n","    </tr>\n","    <tr>\n","      <th>1491</th>\n","      <td>1491</td>\n","      <td>97.40</td>\n","      <td>80.40</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>876 rows Ã— 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cc0a9a16-e007-4b6c-88ec-9e46da8fa1a7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-cc0a9a16-e007-4b6c-88ec-9e46da8fa1a7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-cc0a9a16-e007-4b6c-88ec-9e46da8fa1a7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["y_prediction =  LR.predict([[2,3,4,5]])\n","y_prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tn6rfqC_s-6j","executionInfo":{"status":"ok","timestamp":1650357126185,"user_tz":-345,"elapsed":14,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}},"outputId":"4627f791-fac3-4379-d56f-d5667718efcc"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/base.py:451: UserWarning: X does not have valid feature names, but LinearRegression was fitted with feature names\n","  \"X does not have valid feature names, but\"\n"]},{"output_type":"execute_result","data":{"text/plain":["array([30.68227503])"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":[""],"metadata":{"id":"umyzdx8htGUp","executionInfo":{"status":"error","timestamp":1650357030816,"user_tz":-345,"elapsed":468,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}},"colab":{"base_uri":"https://localhost:8080/","height":325},"outputId":"a52ce4fc-ba5f-4e19-e41a-6e5c78dc8a61"},"execution_count":48,"outputs":[{"output_type":"error","ename":"KeyError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","\u001b[0;32m<ipython-input-48-7345c8c043e9>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mx_test\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'unnamed'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/util/_decorators.py\u001b[0m in \u001b[0;36mwrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    309\u001b[0m                     \u001b[0mstacklevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstacklevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    310\u001b[0m                 )\n\u001b[0;32m--> 311\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mfunc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    312\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    313\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mwrapper\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4911\u001b[0m             \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4912\u001b[0m             \u001b[0minplace\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0minplace\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4913\u001b[0;31m             \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4914\u001b[0m         )\n\u001b[1;32m   4915\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4148\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32min\u001b[0m \u001b[0maxes\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mitems\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4149\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mlabels\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4150\u001b[0;31m                 \u001b[0mobj\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mobj\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_drop_axis\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4151\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4152\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0minplace\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/generic.py\u001b[0m in \u001b[0;36m_drop_axis\u001b[0;34m(self, labels, axis, level, errors)\u001b[0m\n\u001b[1;32m   4183\u001b[0m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mlevel\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mlevel\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4184\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 4185\u001b[0;31m                 \u001b[0mnew_axis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0maxis\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdrop\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlabels\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0merrors\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0merrors\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   4186\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreindex\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0maxis_name\u001b[0m\u001b[0;34m:\u001b[0m \u001b[0mnew_axis\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   4187\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.7/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mdrop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6015\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmask\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0many\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6016\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0merrors\u001b[0m \u001b[0;34m!=\u001b[0m \u001b[0;34m\"ignore\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 6017\u001b[0;31m                 \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"{labels[mask]} not found in axis\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   6018\u001b[0m             \u001b[0mindexer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mindexer\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m~\u001b[0m\u001b[0mmask\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   6019\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdelete\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mKeyError\u001b[0m: \"['unnamed'] not found in axis\""]}]},{"cell_type":"code","source":["x_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"dexo7HcO7dQX","executionInfo":{"status":"ok","timestamp":1650356791599,"user_tz":-345,"elapsed":24,"user":{"displayName":"SADANAND PANERU","userId":"18255753388174202449"}},"outputId":"e3bd4e78-d574-4789-d4fb-0fd5fb03d8cf"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Unnamed: 0  humidityAt3  humidityAt12  precipitation\n","478          478        82.90         95.30            0.0\n","2533        2533        86.30         94.00            0.0\n","1765        1765        64.40         74.40            0.0\n","3364        3364        80.90         96.10            0.0\n","3697        3697        72.70         67.00            0.0\n","...          ...          ...           ...            ...\n","1962        1962        75.60         71.00            0.0\n","3885        3885        85.55         79.13            1.7\n","2251        2251        74.70         71.10            0.0\n","1705        1705        82.30         88.30           42.6\n","1491        1491        97.40         80.40            0.0\n","\n","[875 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-7d6e4c74-7125-4b75-b1fb-a4bce3440fca\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>humidityAt3</th>\n","      <th>humidityAt12</th>\n","      <th>precipitation</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>478</th>\n","      <td>478</td>\n","      <td>82.90</td>\n","      <td>95.30</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2533</th>\n","      <td>2533</td>\n","      <td>86.30</td>\n","      <td>94.00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1765</th>\n","      <td>1765</td>\n","      <td>64.40</td>\n","      <td>74.40</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3364</th>\n","      <td>3364</td>\n","      <td>80.90</td>\n","      <td>96.10</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3697</th>\n","      <td>3697</td>\n","      <td>72.70</td>\n","      <td>67.00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1962</th>\n","      <td>1962</td>\n","      <td>75.60</td>\n","      <td>71.00</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3885</th>\n","      <td>3885</td>\n","      <td>85.55</td>\n","      <td>79.13</td>\n","      <td>1.7</td>\n","    </tr>\n","    <tr>\n","      <th>2251</th>\n","      <td>2251</td>\n","      <td>74.70</td>\n","      <td>71.10</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1705</th>\n","      <td>1705</td>\n","      <td>82.30</td>\n","      <td>88.30</td>\n","      <td>42.6</td>\n","    </tr>\n","    <tr>\n","      <th>1491</th>\n","      <td>1491</td>\n","      <td>97.40</td>\n","      <td>80.40</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>875 rows Ã— 4 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7d6e4c74-7125-4b75-b1fb-a4bce3440fca')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7d6e4c74-7125-4b75-b1fb-a4bce3440fca button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7d6e4c74-7125-4b75-b1fb-a4bce3440fca');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":41}]},{"cell_type":"code","source":[""],"metadata":{"id":"08sjVe-D7iOQ"},"execution_count":null,"outputs":[]}]}